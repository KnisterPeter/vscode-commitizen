{
  "name": "vscode-commitizen",
  "displayName": "Visual Studio Code Commitizen Support",
  "description": "commitizen - git commit with conventions",
  "version": "0.11.1",
  "publisher": "KnisterPeter",
  "engines": {
    "vscode": "^1.46.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "git",
    "commit",
    "commitizen",
    "changelog",
    "conventional-changelog"
  ],
  "activationEvents": [
    "onCommand:vscode-commitizen.commit"
  ],
  "main": "./out/extension",
  "contributes": {
    "configuration": {
      "title": "Commitizen configuration",
      "properties": {
        "commitizen.autoSync": {
          "type": "boolean",
          "default": false,
          "description": "Set to true to automatically sync commit with git (push and pull)."
        },
        "commitizen.subjectLength": {
          "type": "number",
          "default": 50,
          "description": "Override the allowed commit message subject length."
        },
        "commitizen.showOutputChannel": {
          "type": "string",
          "enum": [
            "off",
            "always",
            "onError"
          ],
          "default": "onError",
          "description": "Open the output panel after commit."
        },
        "commitizen.quoteMessageInGitCommit": {
          "type": "boolean",
          "default": true,
          "description": "Set to true to put double quotes around the message when calling git -m."
        },
        "commitizen.capitalizeWindowsDriveLetter": {
          "type": "boolean",
          "default": false,
          "description": "Set to true to capitalize the Windows drive letter in Git's working directory path. Git treats paths as case sensitive and may ignore [includeIf] attributes in your .gitconfig if drive letters are the wrong case."
        },
        "commitizen.shell": {
          "type": "boolean",
          "default": true,
          "description": "Set to true to runs file inside of a shell. Uses /bin/sh on UNIX and cmd.exe on Windows."
        }
      }
    },
    "commands": [
      {
        "command": "vscode-commitizen.commit",
        "title": "Conventional Commit",
        "category": "Commitizen"
      }
    ]
  },
  "scripts": {
    "linter": "tslint --project .",
    "pretest": "yarn vscode:prepublish && yarn linter",
    "test": "node ./out/test/runTest.js",
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "publish-extension": "vsce publish --yarn --pat $VSCE_TOKEN $(node -e \"console.log(require('./package.json').version)\")"
  },
  "devDependencies": {
    "@commitlint/cli": "11.0.0",
    "@commitlint/config-conventional": "11.0.0",
    "@knisterpeter/standard-tslint": "1.7.2",
    "@types/mocha": "8.2.0",
    "@types/node": "10.17.46",
    "@types/vscode": "1.46.0",
    "@types/wrap-ansi": "3.0.0",
    "glob": "7.1.6",
    "husky": "5.0.9",
    "mocha": "8.2.1",
    "prettier": "2.2.1",
    "shipjs": "0.23.0",
    "tslint": "6.1.3",
    "typescript": "4.1.5",
    "vsce": "1.85.0",
    "vscode-test": "1.5.0"
  },
  "dependencies": {
    "execa": "^5.0.0",
    "sander": "^0.6.0",
    "wrap-ansi": "^7.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/KnisterPeter/vscode-commitizen.git"
  },
  "author": {
    "name": "Markus Wolf",
    "email": "knister.peter@shadowrun-clan.de"
  },
  "license": "MIT",
  "icon": "images/commitizen-logo.png",
  "bugs": {
    "url": "https://github.com/KnisterPeter/vscode-commitizen/issues"
  },
  "homepage": "https://github.com/KnisterPeter/vscode-commitizen",
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "none"
  },
  "renovate": {
    "extends": [
      "config:base"
    ],
    "lockFileMaintenance": {
      "enabled": true,
      "automerge": true
    },
    "packageRules": [
      {
        "depTypeList": [
          "devDependencies"
        ],
        "updateTypes": [
          "minor",
          "patch"
        ],
        "automerge": true
      },
      {
        "packagePatterns": [
          "^@types/"
        ],
        "excludePackagePatterns": [
          "@types/vscode"
        ],
        "automerge": true
      }
    ]
  }
}
